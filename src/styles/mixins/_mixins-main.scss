// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * 16) * 1px;
	font-size: $sizeValue * 1rem;
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix() {
	*zoom: 1;
	&:before,
	&:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}

// Column width with margin
@mixin column-width($numberColumns: 3) {
	width: map-get( $columns, $numberColumns ) - ( ( $columns__margin * ( $numberColumns - 1 ) ) / $numberColumns );
}

// Sets up border box box-sizing for prefixs
@mixin border-box {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box; 
}

// Creates icon font settings
@mixin icomoon($icon, $position: "before", $replace: false) {
	// If we're replacing the text, set font-size to 0
	@if $replace {
		font-size: 0;
	}
	// Pseudo-element properties
	&:#{$position} {
		@extend .icon-#{$icon};
		font-family: 'icomoon';
		// speak: none;
		font-style: normal;
		font-weight: normal;
		font-variant: normal;
		text-transform: none;
		line-height: 1;
		opacity: 0.85;
		@if $replace {
			font-size: 1rem;
		}
		@content;
	}
}

// Gradient from left to right variable color
@mixin gradient($endDir, $startColor, $endColor,  $spread) {
	background-image: linear-gradient(
		to #{$endDir},
		#{$startColor}, 
		#{$endColor} #{$spread}
	);
}

@mixin shadow($type, $place, $xAxis, $yAxis, $spread, $color) {
	#{$type}-shadow: #{$place} #{$xAxis} #{$yAxis} #{$spread} #{$color};
}
